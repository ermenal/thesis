// This is an autogenerated file, any changes to this file will be overwritten.

#ifndef SLI_TZ_S_INTERFACE_FUNCS_AUTOGEN_H
#define SLI_TZ_S_INTERFACE_FUNCS_AUTOGEN_H

//------------------------------------------------------------------------------
// Local typedefs

// Function pointer conforming to the PSA Crypto secure function signature.
typedef int32_t (*iovec_fn) (psa_invec *in_vec,
                             size_t in_len,
                             psa_outvec *out_vec,
                             size_t out_len);

// Function pointer conforming to syscfg simple function signature.
typedef uint32_t (*sli_tz_simple_fn) (uint32_t arg);

// Function pointer conforming to syscfg simple function signature with no args.
typedef uint32_t (*sli_tz_simple_fn_no_args) (void);

//------------------------------------------------------------------------------
// Secure service function tables

#if defined(TZ_SERVICE_PSA_CRYPTO_PRESENT)
static const iovec_fn crypto_function_table[] = {
(iovec_fn)tfm_crypto_aead_encrypt,
(iovec_fn)tfm_crypto_aead_decrypt,
(iovec_fn)tfm_crypto_aead_encrypt_setup,
(iovec_fn)tfm_crypto_aead_decrypt_setup,
(iovec_fn)tfm_crypto_aead_generate_nonce,
(iovec_fn)tfm_crypto_aead_set_nonce,
(iovec_fn)tfm_crypto_aead_set_lengths,
(iovec_fn)tfm_crypto_aead_update_ad,
(iovec_fn)tfm_crypto_aead_update,
(iovec_fn)tfm_crypto_aead_finish,
(iovec_fn)tfm_crypto_aead_verify,
(iovec_fn)tfm_crypto_aead_abort,
(iovec_fn)tfm_crypto_cipher_encrypt,
(iovec_fn)tfm_crypto_cipher_decrypt,
(iovec_fn)tfm_crypto_cipher_encrypt_setup,
(iovec_fn)tfm_crypto_cipher_decrypt_setup,
(iovec_fn)tfm_crypto_cipher_generate_iv,
(iovec_fn)tfm_crypto_cipher_set_iv,
(iovec_fn)tfm_crypto_cipher_update,
(iovec_fn)tfm_crypto_cipher_finish,
(iovec_fn)tfm_crypto_cipher_abort,
(iovec_fn)tfm_crypto_key_derivation_setup,
(iovec_fn)tfm_crypto_key_derivation_get_capacity,
(iovec_fn)tfm_crypto_key_derivation_set_capacity,
(iovec_fn)tfm_crypto_key_derivation_input_bytes,
(iovec_fn)tfm_crypto_key_derivation_input_integer,
(iovec_fn)tfm_crypto_key_derivation_input_key,
(iovec_fn)tfm_crypto_key_derivation_key_agreement,
(iovec_fn)tfm_crypto_key_derivation_output_bytes,
(iovec_fn)tfm_crypto_key_derivation_output_key,
(iovec_fn)tfm_crypto_key_derivation_output_key_custom,
(iovec_fn)tfm_crypto_key_derivation_output_key_ext,
(iovec_fn)tfm_crypto_key_derivation_abort,
(iovec_fn)tfm_sl_psa_key_derivation_single_shot,
(iovec_fn)tfm_crypto_raw_key_agreement,
(iovec_fn)tfm_crypto_get_key_attributes,
(iovec_fn)tfm_crypto_reset_key_attributes,
(iovec_fn)tfm_crypto_open_key,
(iovec_fn)tfm_crypto_close_key,
(iovec_fn)tfm_crypto_import_key,
(iovec_fn)tfm_crypto_destroy_key,
(iovec_fn)tfm_crypto_export_key,
(iovec_fn)tfm_crypto_export_public_key,
(iovec_fn)tfm_crypto_purge_key,
(iovec_fn)tfm_crypto_copy_key,
(iovec_fn)tfm_crypto_mac_compute,
(iovec_fn)tfm_crypto_mac_verify,
(iovec_fn)tfm_crypto_mac_sign_setup,
(iovec_fn)tfm_crypto_mac_verify_setup,
(iovec_fn)tfm_crypto_mac_update,
(iovec_fn)tfm_crypto_mac_sign_finish,
(iovec_fn)tfm_crypto_mac_verify_finish,
(iovec_fn)tfm_crypto_mac_abort,
(iovec_fn)tfm_crypto_generate_random,
(iovec_fn)tfm_crypto_generate_key,
(iovec_fn)tfm_crypto_generate_key_custom,
(iovec_fn)tfm_crypto_generate_key_ext,

};
#endif // TZ_SERVICE_PSA_CRYPTO_PRESENT

#if defined(TZ_SERVICE_PSA_ITS_PRESENT) || defined(TZ_SERVICE_NVM3_PRESENT)
static const iovec_fn nvm3_function_table[] = {
(iovec_fn)sli_tz_nvm3_init_default,
(iovec_fn)sli_tz_nvm3_deinit_default,

(iovec_fn)sli_tz_nvm3_read_partial_data,
(iovec_fn)sli_tz_nvm3_read_data,
(iovec_fn)sli_tz_nvm3_write_data,
(iovec_fn)sli_tz_nvm3_delete_object,
(iovec_fn)sli_tz_nvm3_open,
(iovec_fn)sli_tz_nvm3_close,
(iovec_fn)sli_tz_nvm3_get_object_info,
(iovec_fn)sli_tz_nvm3_write_counter,
(iovec_fn)sli_tz_nvm3_read_counter,
(iovec_fn)sli_tz_nvm3_increment_counter,
(iovec_fn)sli_tz_nvm3_erase_all,
(iovec_fn)sli_tz_nvm3_get_erase_count,
(iovec_fn)sli_tz_nvm3_set_erase_count,
(iovec_fn)sli_tz_nvm3_repack,
(iovec_fn)sli_tz_nvm3_repack_needed,
(iovec_fn)sli_tz_nvm3_resize,
(iovec_fn)sli_tz_nvm3_enum_objects,
(iovec_fn)sli_tz_nvm3_enum_deleted_objects,

};
#endif // TZ_SERVICE_PSA_ITS_PRESENT || TZ_SERVICE_NVM3_PRESENT

#if defined(TZ_SERVICE_PSA_ITS_PRESENT)
static const iovec_fn its_function_table[] = {
(iovec_fn)tfm_its_set_req,
(iovec_fn)tfm_its_get_req,
(iovec_fn)tfm_its_get_info_req,
(iovec_fn)tfm_its_remove_req,
(iovec_fn)sli_psa_its_encrypted_req,

};
#endif // TZ_SERVICE_PSA_ITS_PRESENT

#if defined(TZ_SERVICE_SE_MANAGER_PRESENT)
static const iovec_fn se_manager_function_table[] = {

};
#endif // TZ_SERVICE_SE_MANAGER_PRESENT

#if defined(TZ_SERVICE_ATTESTATION_PRESENT)
static const iovec_fn attestation_function_table[] = {
  
};
#endif // TZ_SERVICE_ATTESTATION_PRESENT

#if defined(TZ_SERVICE_SYSCFG_PRESENT) || defined(TZ_SERVICE_MSC_PRESENT)
static const sli_tz_simple_fn simple_function_table[] = {
  (sli_tz_simple_fn)sli_tz_msc_set_readctrl,
(sli_tz_simple_fn)sli_tz_msc_set_pagelock,
(sli_tz_simple_fn)sli_tz_msc_get_pagelock,
(sli_tz_simple_fn)sli_tz_msc_set_misclockword,
(sli_tz_simple_fn)sli_tz_syscfg_mask_dmem0retnctrl_register,

};

static const sli_tz_simple_fn_no_args simple_function_table_no_args[] = {
  (sli_tz_simple_fn_no_args)sli_tz_msc_get_locked,
(sli_tz_simple_fn_no_args)sli_tz_msc_set_locked,
(sli_tz_simple_fn_no_args)sli_tz_msc_set_unlocked,
(sli_tz_simple_fn_no_args)sli_tz_msc_get_readctrl,
(sli_tz_simple_fn_no_args)sli_tz_msc_get_userdata_size,
(sli_tz_simple_fn_no_args)sli_tz_msc_get_misclockword,
(sli_tz_simple_fn_no_args)sli_tz_syscfg_read_chiprev_register,
(sli_tz_simple_fn_no_args)sli_tz_syscfg_read_dmem0retnctrl_register,
(sli_tz_simple_fn_no_args)sli_tz_syscfg_zero_dmem0retnctrl_register,
(sli_tz_simple_fn_no_args)sli_tz_syscfg_set_systicextclken_cfgsystic,
(sli_tz_simple_fn_no_args)sli_tz_syscfg_clear_systicextclken_cfgsystic,

};
#endif // TZ_SERVICE_SYSCFG_PRESENT || TZ_SERVICE_MSC_PRESENT

#endif // SLI_TZ_S_INTERFACE_FUNCS_AUTOGEN_H
